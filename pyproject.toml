[build-system]
requires = ["setuptools>=61.0", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "paste"
authors = [
    {name="Max Land", email="max.ruikang.land@gmail.com"}
]
description = "A computational method to align and integrate spatial transcriptomics experiments."
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]

dependencies = [
    "anndata",
    "scanpy",
    "POT>=0.9.5",
    "numpy<2",
    "scipy",
    "scikit-learn",
    "IPython",
    "statsmodels",
    "torch",
    "torchnmf"
]
dynamic = ["version"]

[project.scripts]
paste = "paste3.__main__:main"

[project.optional-dependencies]
dev = [
    "build",
    "pytest",
    "pytest-xdist",
    "coverage",
    "coveralls",
    "ruff",
    "pre-commit",
    "napari"
]

docs = [
    "sphinx==6.2.1",
    "myst-parser",
    "sphinx-autodoc-typehints",
    "nbsphinx",
    "sphinx-gallery",
    "sphinx-rtd-theme",
    "sphinx-autodoc-annotation",
    "jupyterlab",
    "plotly",
    "squidpy"
]

[project.entry-points."napari.manifest"]
paste3 = "paste3.napari:napari.yaml"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-sv"

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "TID251",      # flake8-tidy-imports.banned-api
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
ignore = [
    # Issues that need longer to sort out
    "PLR0913",  # too many arguments to a function
    "PLR0915",  # too many statements
    "PLR0912",  # too many branches
    "PLR2004",  # Magic values used in pytests
    "EM101",    # Exceptions using string literals
    "EM102",    # Exceptions using f-strings
]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["T201"]  # `print` in notebooks
